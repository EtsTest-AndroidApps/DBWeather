/*
 *  Copyright (C) 2017 Darel Bitsy
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

kotlin {
    experimental {
        coroutines "enable"
    }
}

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdj
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation kotlinLibs.stdlib
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3') {
        transitive = false
    }
    api rxLibs.rxAndroid

    implementation kotlinLibs.stdlib

    compileOnly androidSupportLibs.appcompat_v7
    compileOnly 'javax.inject:javax.inject:1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true
    }

    testImplementation otherLibs.junit
}
